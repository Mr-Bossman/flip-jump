startup
;end_of_div


// TODO - test div
//  The next test fails for now:  test_div 2, 1, div2_1, 0xc3, 0xe

   DIV_NUM = 0x2d37afdff3a29957b1600de68e1476244bb61d73c5233a86e48eb76cfcc5b96eb3b9f64728ae12f8b5694c6718ea7d241ae989003a098a80219fbb1290fa0d866a73564dfcbb62cbe1b91d1c96a0ba40f2b2577c0ca72c2a47b76e3596b67a2363de94a25a9dc66c44406fa8309fff20d5293fa9979d10644a6b3e4dd931970960a950ec082c22f5bfe37ce46d15420bc267bf3b99d34f2aa97cf4b32dd2d2684197f512168ddcd25128f6c7596434bd5bcbe4b389fe0c68b558d2ec17ccadceeb14c34fbd43d8134cefdd6e4b71a01e8815dd0407fa3016f5fb5ff7eca134d31b10fffceb498ff95868d70073ce41a6022eb7b985e8572754254e3f2687e75665266a4a02ced3746af81ef8f22da69914cc88f15c99716573520ce26f5562098eba7edc126a9921dbc0be9e964ae1c467fc9fca732c611cfde1c69dbc09114c34f244c919b8210d7b81e442f5a3281b88e3a212b9fdc5519dcacd972f759e8b6852893d12c5189d43394566284da3c2028eebefc54de104fe93c8a1c5dad73f6475a5f4d06aee2a19135d765bba7f6b3c193c4e7f372e306730ee36afffd2a65fd4b2ee54a4f8e02a3d799fe3ed063af2a4a560c67f7ea375988f42017761ad4e9558b980b4f688dea3927220710ec2a84f1e4aea64d6c48ce28a5b586aea03ed6651d05342b45b97cdfa8c94f9666fc44d05768506f81a926db02a2d803db1f3220433fb68afcba4e0370d110a9357d63164e5209e8286112190f0ce8e1622db3dcdcd332d544ff6f0b1af94ee0cc748cc74232d2ec310ac06ec8a4fceccc08ea9134904060a7b139ee46a679451379066e57bb72cc1e47ec34c3b741f2bd88c07632ad5c2b78a61703eb2d36f134eb9da5e8cbd1231f3233c075ab1f532a66ce50e09ba83ef8b3da5709daa80995dd7fc1a3d6fa4e1d5f3b1fd0cc04e416bf7f054483d9b4a25151b055ee829d52e4f70ec8b3e47320c0fb710280a8c8e2fb3a632c6f3911086c03091823317dd10bd218558b9139b0a2ad1ae75e50af9a666c4bf81557c173ab8a63877694c184d04ed78a925c430a8e0914062ce16ed80f53f09384f637f5769eb3f468b9e894a413eb634760171b84e7a161240b36512

DIV_B1_NUM = 0xa67d738774eae443169a4a82e86cf9a4b11bbe95147f43b51db9845c8f435cc5491faa6ee3a48591824833862496342dead6
DIV_B2_NUM = 0x6e287f9d6d301a1d335442d41a1aed5cd0c66a3f69321d412d7b2ad5b09de6c0fb101010c955ce7e30bac0bfe684638ed24f4582ec2b69e7c84f4b092a81752f13cc9b6ca561add4f38bc59b552cbf7a4f423987ee8b4451169fc013c316595ed102
DIV_B4_NUM = 0x35693c547f39bb78985939825165f49cd015a98a814eda69bd762e66e44f4f44915bc2df73f3a9a41ba3b82ea2d62a85ed4b9be039927eebfe932c86780fa3fa06477bec7b21a6ba527704eda18333a1da94a4dee4ab0865ba05e5bc78b11612b10f66b6128ea96ec120fc12ed6c64b1fc78387147e286347de4352f800e14b48be2acdbf0e1ee6153bcd5da831b5f975d693ffe911114a5a7a16867c87d55ecb6135e9fc0cff7683c99c66d970cf1b93d68a95f843714c809b6d131c9392cf79988461cd
DIV_B8_NUM = 0x70b06b1281c825b68a90ebb74db2e604b7af1091374ea71f9700d06c69cc9f4528e0ce8cb927b9a6c38191bfe3ba2a7a846ab232a6f1bed5cce422495ffd7293d95bcdb3cca6b36912fe1ef9280de585b5b43dfffcf6a6e2e8589a9247bc9a61da78c73dc9f7720e2a5139dcb2d5294a9b816a90cfcac7688bf64f7e0e5e7f81bbf1eb9618da9d74e192e5796b2fff35b2f08fcb69522a01af6a7f4a1466719c9eb0650bc61294a7331a18952b59d9b6f7d1c68bd30962fed55cf6e396610666ab80f1404e9c6695721a69d5e9a3d60b9b0ec0e38d0663006f03e1a2cac891db7b749179001ee03f23999a53f6d3f5c00665a8e64e565ba972dab0d7ca848e56c7722707204421e8f622de3d3ec901dc3f510f7f43c5da7b364521da3e1ece71de150a8c5483c5ba0ddbb4cd31e3376145673113bd4c500a4838367dcb5955b5b0f377e0574fd6d668849b2c5944e5bc6ae6c23776be9cd85fdad7dd60ebed860daec0ab316b6e704c944548b1e48a3c9dfb8437cdf48184ca18c847e4abe2b19381ce80323483280ccd7ca2e


hex.init

ah:  hex.vec 16
bh:  hex.vec 16
res: hex.vec 16
ch:  hex.vec 16
mod: hex.vec 16
mh:  hex.vec 16


ret: ;0


div0:
    output "0"
    fret ret

neq_div_print:
    output '\n'
    hex.print_uint 16, ah, 1, 0
    output " / "
    hex.print_uint 16, bh, 1, 0
    output " = "
    hex.print_uint 16, res, 1, 0
    output "  !=  "
    hex.print_uint 16, ch, 1, 0
    output '\n'
    fret ret

neq_mod_print:
    output '\n'
    hex.print_uint 16, ah, 1, 0
    output " % "
    hex.print_uint 16, bh, 1, 0
    output " = "
    hex.print_uint 16, mod, 1, 0
    output "  !=  "
    hex.print_uint 16, mh, 1, 0
    output '\n'
    fret ret


def test_div n, nb, div_label, a, b @ neq_div, eq_div,  cmp_mod,  neq_mod, eq_mod,  end < ah, bh, res, ch,  mod, mh,  ret,  neq_div_print, neq_mod_print {
    hex.set   n, ah, a
    hex.zero nb, bh
    fcall div_label, ret
    hex.set  nb, bh, b
    hex.set   n, ch, (a/b)&((1<<(4*n ))-1)
    hex.set  nb, mh, (a%b)&((1<<(4*nb))-1)
    fcall div_label, ret

    hex.cmp  n, res, ch, neq_div, eq_div, neq_div

  neq_div:
    fcall neq_div_print, ret
    ;cmp_mod
  eq_div:
    output '='
    ;cmp_mod

  cmp_mod:
    hex.cmp nb, mod, mh, neq_mod, eq_mod, neq_mod

  neq_mod:
    fcall neq_mod_print, ret
    ;end
  eq_mod:
    output '='
    ;end

  end:
}


end_of_div:
