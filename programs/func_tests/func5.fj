stl.startup


// Prints "ABC abcdefg ABCD-", and then 0/1, the xor of x5,y5
test5:
    stl.output 'A'
    bit.push res5
    stl.output 'B'
    bit.push x5
    stl.output 'C'
    bit.push y5

    stl.output ' '
    bit.call func5
    stl.output ' '

    stl.output 'A'
    bit.pop y5
    stl.output 'B'
    bit.pop x5
    stl.output 'C'
    bit.pop_res res5
    stl.output 'D'

    bit.bin2ascii ascii, res5
    stl.output '-'
    bit.print ascii

    stl.output '\n'
    stl.loop

// res = arg0 xor arg1
func5:
    bit.zero __func5_res
    bit.get_sp __func5_arg_ptr
    stl.output 'a'

    bit.dec_ptr __func5_arg_ptr
    stl.output 'b'
    bit.xor_from_ptr __func5_res, __func5_arg_ptr
    stl.output 'c'
    bit.dec_ptr __func5_arg_ptr
    stl.output 'd'
    bit.xor_from_ptr __func5_res, __func5_arg_ptr
    stl.output 'e'

    bit.dec_ptr __func5_arg_ptr
    stl.output 'f'
    bit.xor_to_ptr __func5_arg_ptr, __func5_res
    stl.output 'g'

    bit.return
  __func5_res:
    bit.bit
  __func5_arg_ptr:
    bit.vec w


x5:
    bit.bit 1
y5:
    bit.bit 1
res5:
    bit.bit 0

ascii:
    bit.vec 8

bit.ptr_init
bit.stack_init 10
