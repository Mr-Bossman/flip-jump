ADD_MUL_NUM = 0xd6d55a3e21059f6b1ee1e7d99a570881d33b89eefebd480c8b3863b6ed6fae9d6747465e5954653e5cca517605bf40cb6bc790a1098361095ba78b7d70e2e25c6d486acde26578cb69cbbaa0d8090c64d2c27a88189455f9317ddcac66805e73580b607f58696f17fc61ab91c058579e3398d90fdb5e415d66f7c3b7b574234969479a9c146c482bdd789b64c61ad548ea92d8f1d5b6c6806b8a8f4043affed2ad09673a16b3a691cd965baf5bf09fa8ed49de7440db749d0f1579b170daa5bfaa76bff3917119844072d7587ff6476869d2a36bf319e1b73e1e81482c8fd68b3cacc01e4ae0f8287cd1d545cacf3daead8c915cda3e4ebf38e5494f9627d019925696b1dca5175d098bdd13aca4124913cffe51faa8bb19bf1bc87abefaaece96a6cfcbc14bcbb46a80f5361c67883ca0c2df24a6708bc32e914a8944348e6b7d37ead08b4426c24203fd68f35fd6c1ee3cf85703eae76385997097524b5394b140f8a9c418da11a8ba93a0eeb6696854f3c98548ef8e4d65640b1432c69dbd16465f86c4f2fd722c8abc2d9fd81203ccb495eba331148b834fe777ff4371a232f5906ed665ae07ba2c5e91bb1331add953c2c85d70bdae04b68aff83dc819b33e87eab91c8eb38a4fc8524dea9f5936f16f65f7a819f96dadc9b4dcbcbac38bd5d187aa50bdcbb8bb1e029afea41f751498c2fbd727a13a7321024c964c21692b0eea58cec3c2af7633c528b6f9045baf805d4994fb47a4180930ea4753ebb4a41b6e6622588cee6acb918f2512e662e0be8410ea21b88f6ba1ceed4cd011b2819bc265b6f8f970698954ae9df99af4311c2ca321f11c7f2432309024e9b60db1764e152f9448a52499f638dc2b21e222dac7959195430c822c9c8a777ba4d218694fbe08211a0f68b85bd90286b136151b2a46c4e7c55a02d5c882f3b84dee900d43f562141b82cb078f766ce42a3556998c3fdb55299ca4fc2c0f1c80666ed7bb1cb40d5abeac6083c0d109b4e1635a1c4f496dc7648a2757e0e5a6de978f3c8433b9be09b5735fa1eeabdb7707dea7f68c3c12832ff2d566893e35a663ec23418be7a702205f1e8f7c46584708b28b1560fd658523520966075d5515dccbb9324ff09bf1ab0eca032c258ac4d94d8a543d1f4872edb8abe09d448890c2a72bd84eb7636f7ef4819f37a10d3c111cd69d948b6ba9af4eba05dec054f8ccf11ef4cde85cc34a140f4df627f12af166d48ec64f8d36fb081014fd2cd288815d0d8df5875eeac22a89fc65a0cabc1579899399e00548d941c951968b3f3314b00d62b4d1358d53491b44bddb5511511c791091d0c42bfdd245c0154ad7730372030242308ba0490ce9c80976a5cc037ded28266402a39425e39a97568bb0fe09f8a7b45ffccd2579cbcfaa4f4652b20e8fd3233d794edd9ad6f3c3b0d5d5a0e92cc79c2ae191f5b71238c99faac927d2eff9b776826a9f8639317c68de087576e9c074b05941488ae95de4887a2ceb7efa3d4f9ccb30f3321246d5fe2621c2aca0e3e21b857255ee2c6799e3d63f7e25e43050a1b418d78c51d42b40b4134f6acd3bdfe05f89443f764fc9faf8e110459d5527b0c61e8bff8656af50def7ec7767334a6d1f0e64fa827390b3338e371901ec319ba5f4acaff48dad8890233830b003bbabbe04f7201a29c0ef9b56149


Flag64b = ((1<<64)-1)
rep(50, i) test_add_mul_64 (ADD_MUL_NUM>>((3*i+2)*64))&Flag64b, (ADD_MUL_NUM>>((3*i+1)*64))&Flag64b, (ADD_MUL_NUM>>((3*i)*64))&Flag64b

loop


add_mul_64:
    hex.add_mul 16, res, ah, bh
    fret ret

def test_add_mul_64 r, a, b @ lt, eq, gt,  end < ah, bh, res, old_res, ch, ret, add_mul_lt_print, add_mul_gt_print, add_mul_64, zero_all_5 {
    fcall zero_all_5, ret
    hex.xor_by 16, ah,  a
    hex.xor_by 16, bh,  b
    hex.xor_by 16, res, r
    hex.xor_by 16, old_res, r
    hex.xor_by 16, ch, (r+a*b)&((1<<64)-1)
    fcall add_mul_64, ret
    hex.cmp 16, res, ch, lt, eq, gt

  lt:
    fcall add_mul_lt_print, ret
    ;end
  eq:
    output "=\n"
    ;end
  gt:
    fcall add_mul_gt_print, ret
    ;end
  end:
}

