// TODO read 4-bit values (good for bit/hex/dec) values from pointers.


// ---------- Functions


ns bit {
        // Complexity: w(5phi+21)
        // the pop_ret_address is counted for the future return
    def call address @ return_label {
        .push_ret_address return_label
        ;address

        pad 2
      return_label:
        .pop_ret_address return_label
    }


    // Complexity: w(7phi+29)
        // the last-call's pop_ret_address is counted for this return
    def return < .pointers.sp {
        .ptr_jump .pointers.sp
    }
}



// ---------- Fast Call


ns stl {
    // Complexity: @-1
    def fcall label, ret_reg @ ret {
        wflip ret_reg+w, ret, label
        pad 2
      ret:
        wflip ret_reg+w, ret
    }

    // Complexity: 1
    def fret ret_reg {
        ;ret_reg
    }
}
